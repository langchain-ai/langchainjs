diff --git a/lib/parser.js b/lib/parser.js
index 43e4aff85acc56f5360f80b639062157e64b61c1..23d3e7b37004f6b8787d14cbe4704bc626ac526f 100644
--- a/lib/parser.js
+++ b/lib/parser.js
@@ -46,8 +46,7 @@ function parseTreeRecursive(context, request, options, output, resolve) {
                 node.expression.kind === typescript_1.default.SyntaxKind.ImportKeyword &&
                 node.arguments.length === 1 &&
                 typescript_1.default.isStringLiteral(node.arguments[0])) {
-                newRequest = node.arguments[0].text;
-                kind = consts_1.DependencyKind.DynamicImport;
+                return;
             }
             else if (typescript_1.default.isCallExpression(node) &&
                 typescript_1.default.isIdentifier(node.expression) &&
diff --git a/lib/parser.mjs b/lib/parser.mjs
index 6bc6fcc31e0da798e0f5bfc018f02243f48451b4..b609df15eb8584351f47d86849ed419018135257 100644
--- a/lib/parser.mjs
+++ b/lib/parser.mjs
@@ -43,8 +43,7 @@ function parseTreeRecursive(context, request, options, output, resolve) {
                 node.expression.kind === ts.SyntaxKind.ImportKeyword &&
                 node.arguments.length === 1 &&
                 ts.isStringLiteral(node.arguments[0])) {
-                newRequest = node.arguments[0].text;
-                kind = DependencyKind.DynamicImport;
+                return;
             }
             else if (ts.isCallExpression(node) &&
                 ts.isIdentifier(node.expression) &&
diff --git a/src/parser.ts b/src/parser.ts
index b4b2bb3e783224da78c6a8b80c2195da07daa246..b64197b52b1081fa59162dcb49356ef469c0d204 100644
--- a/src/parser.ts
+++ b/src/parser.ts
@@ -59,8 +59,7 @@ async function parseTreeRecursive(
       node.arguments.length === 1 &&
       ts.isStringLiteral(node.arguments[0])
     ) {
-      newRequest = (node.arguments[0] as ts.StringLiteral).text;
-      kind = DependencyKind.DynamicImport;
+      return;
     } else if (
       ts.isCallExpression(node) &&
       ts.isIdentifier(node.expression) &&
